[global]
work_dir = /path/to/you/work/directory/work_dir
# path to the work directory
simulation_id = Test
# the unique name for simulation
chrom_sizes = /full/path/to/chromosome/sizes/test.chrom.sizes
# path to the file with chromosome sizes of reference genome
resolution = 5000
# the minimal hi-c map resolution
resolution_low = 50000
# optional, allow sufficiently accelerate the simulation, use 10Ñ… to resolution
resolution_pab = 25000,50000,100000,250000,500000
# optional, to zero contact processing, 500kb - 2Mb resolutions are preferable
# the "resolution_low" and "resolution_pab" values must be devided on the "resolution" without remainder
noised = True
# True for wgHi-C, False for ec/pc Hi-C
path_to_java_dir = /path/to/java/dir
# path to directory contain java executioner file, if don't include in system PATH
path_to_juicertools = /path/to/juicertools/juicer_tools_1.22.01.jar
# path to juicer tools .jar-file
log_file = test.log
# name of log- file.
; skip_stages = pre,svs,wt
# optional, the list of ignored stages. ATTENTION! If you ignore some stage, you must handly write needed parameters

[preprocessing]
# the parameters for "pre" stage
path_to_hic = /full/path/to/hic/test.hic
# path to the .hic file
normalization = NONE
# the normalization of contacts used for the statistics processing, see Juicer Wiki
; simulation_id = ${global:simulation_id}
# optional, the unique name for dataset, by default used simulation_id from the [global] section
; work_dir = ${global:work_dir}
# optional, the work directory to statistics placement, by default used simulation_id from the [global] section
; chrom_sizes = ${global:chrom_sizes}
# optional, path to file contains the chromosome sizes, by default used value from the [global] section
; resolution = ${global:resolution}
; resolution_low = ${global:resolution_low}
; resolution_pab = ${global:resolution_pab}
# optional, see the description of keys resolution, resolution_low and resolution_pab in [global] section
; capture = False
# optional, if simulated locus capture data, NOT promoter capture, exome capture e t.c.
; path_to_juicer = ${global:path_to_juicertools}
# optional, see the [global] section
; path_to_hic_dump = path to directory containing the dumped contact files
# optional, path to directory contains the contact file in juicer-dump format
; log_file = ${global:log_file}
# optional, use to define the special log-file for this step

[SVs]
# the parameters for "svs" stage
path_to_svs_list = /full/path/to/svs/list/test.svs_list.txt
# path to file containing the description of SVs
rearrangment_id = cnv-X
; the unique id of modeled rearrangement
; resolution = 5000
# optional, by default use resolution from [global] section
# this value defines the precision of SV borders simulation
; chrom_sizes = ${global:chrom_sizes}
; work_dir = ${global:work_dir}
# see [global] section

[simulation]
# the parameters for "sim" stage
model = balanced
# the model of contact recalculation maust be one from "balanced" (default),"align_sensitive","distance_sensitiv","easy"
random = binomial
# the method of contact count randomization, must be one from "binomial" (default), "hypergeometric", "round", "choice" or "norandom"
predict_null_contacts = cov_mixsq_f1
# the method of simulation zero contacts, must be one from
# "cov_mult_f","cov_mult_f1","cov_sq_f","cov_sq_f1" - for wgHiC
# "cov_sum_f","cov_sum_f1","cov_mixed_f","cov_mixed_f1","cov_mixsq_f","cov_mixsq_f1" - for wgHiC
# "pts" - only P(S)
# "pts_ab" - P(S) * O/E from pseudo_compartment
contact_count = 10000000
# the depth of sequencing Hi-C library
; simulation_id = ${global:simulation_id}
; work_dir = ${global:work_dir}
# optional, see [global] section
; chrom_sizes_from = ${global:chrom_sizes}
# optional, path to the _reference_genome_(!) chromosome sizes, by default from[global] section
; chosen_chroms_from = 1,1
# optional, the list of of _reference_genome_(!) chromosome involved in SVs, by default, inherits from the "svs" stage output
; chrom_sizes_to = ${SVs:work_dir}/rear/mutant.chrm.sizes
# optional, path to the _mutant_genome_(!) chromosome sizes, by default, inherits from the "svs" stage output
; chosen_chroms_to = 1x,1x
# optional, the list of _mutant_genome_(!) chromosomes involved in SVs, by default, inherits from the "svs" stage output
; map_file = ${SVs:work_dir}/rear/reference.mutant.mark
# optional, path to the file of "syntany" from _reference_ to _mutant_, by default, inherits from the "svs" stage output
; pointviews = 1 5905000 6110000
;	1 6415000 6465000
;	1 7430000 7665000
# optional, the _reference_genome coordinate of loci involvde in SVs, by default, inherits from the "svs" stage output
; contact_dir = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution}
; coverage_file = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution}.binCov
; distance_file = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution}.stat
; resolution = ${global:resolution}
; contact_low = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution_low}
; coverage_low = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution_low}.binCov
; distance_low = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution_low}.stat
; resolution_low = ${global:resolution_low}
; contact_pab = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution_pab}
; coverage_pab = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution_pab}.binCov
; resolution_pab = ${global:resolution_pab}
# optional, paths to the files contained the contact statistics, by default, inherit from the "pre" stage output
; log_file = ${global:log_file}
# optional, use to define the special log-file for this step

[liftover]
# the parameters for "lift" stage
; simulation_id = ${global:simulation_id}
; work_dir = ${global:work_dir}
# optional, see [global] section
; chrom_sizes_from = ${simulation:chrom_sizes_to}
; chosen_chroms_from = ${simulation:chosen_chroms_to}
; chrom_sizes_to = ${global:chrom_sizes}
; chosen_chroms_to = ${simulation:chosen_chroms_from}
# optional, by default this paramates inheret the values from the "sim" stage output
; map_file = ${SVs:work_dir}/rear/mutant.reference.mark
#optional, path to the file of "syntany" from _mutant_,to _reference_, by default, inherits from the "svs" stage output
; contact_dir = ${global:work_dir}/mdl/in_mut.${global:simulation_id}
; coverage_file = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution}.binCov
; distance_file = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution}.stat
; resolution = ${global:resolution}
; contact_low = ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution_low}
; distance_low =  ${global:work_dir}/pre/${global:simulation_id}/${global:simulation_id}.${global:resolution_low}.stat
# optional, path to the file contained the contantact statistics, by default, inherits from the previously stages
; log_file = ${global:log_file}
# optional, use to define the special log-file for this step

[wild_type]
# the parameters for "wt" stage
# This stage is optional and needed for simulation of heterozygous or partly existed SVs/
# Ignore this stage ([global] section "ignore_stage = wt" if you simulate homozygous SVs.
replica_ids = 0,1
# the list of unique name for simulated _wild-type_ replicas, by default: 0,1
; chrom_sizes_from = ${simulation:chrom_sizes_from}
; chosen_chroms_from = ${simulation:chosen_chroms_from}
; contact_dir = ${simulation:contact_dir}
; coverage_file = ${simulation:coverage_file}
; distance_file = ${simulation:distance_file}
; resolution = ${simulation:resolution}
; contact_low = ${simulation:contact_low}
; coverage_low = ${simulation:coverage_low}
; distance_low = ${simulation:distance_low}
; resolution_low = ${simulation:resolution_low}
; contact_pab = ${simulation:contact_pab}
; coverage_pab = ${simulation:coverage_pab}
; resolution_pab = ${simulation:resolution_pab}
; model = ${simulation:model}
; random = ${simulation:random}
; predict_null_contacts = ${simulation:predict_null_contacts}
# optional, by default 
contact_count = ${simulation:contact_count}
# 
; log_file = ${global:log_file}
# optional, use to define the special log-file for this step
# must be one from "pre","SVs","sim","lift","wt","hic" 

[hic]
format = hic
# must be "hic" to generate .hic-file, or "pre" to generate only .pre-file. without hic-map
hic_resolutions = 5000,10000,25000,50000,100000,250000,500000,1000000,2500000
# the list of resolutions for juicer tools Pre (see https://github.com/aidenlab/juicer/wiki/Pre)
; simulation_id = ${global:simulation_id}
; work_dir = ${global:work_dir}
; chrom_sizes = ${simulation:chrom_sizes_from}
; chosen_chroms = ${simulation:chosen_chroms_from}
; resolution = ${global:resolution}
# optional, see [global] section
; svs_contacts = ${global:work_dir}/mdl/in_ref.${liftover:simulation_id}
# optional, path to contact files of full processed SV, by default, inherits the value from "lift" stage output
# if you simulate wild type replicas without SVs, use svs_contacts = NO
; wt1_contacts = ${global:work_dir}/wt/0
; wt2_contacts = ${global:work_dir}/wt/1
# optional, if you simulate homozygous SV, ignore "wt" stage or use wt1_contacts = NO, wt2_contacts = NO,
; path_to_java_dir = ${global:path_to_juicertools}
; path_to_juicertools = ${global:path_to_juicertools}
# see [global] section